services:
  # Aplicação React
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=https://ymnzbandwpddtxajpjaa.supabase.co
      - VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InltbnpiYW5kd3BkZHR4YWpwamFhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzODkyNjgsImV4cCI6MjA2Njk2NTI2OH0.2uPLF30WbJDRL9gQMyMy4QCzFr1ZgjsuhtyBLB6PEJY
    networks:
      - app-network
    restart: unless-stopped

  # Supabase Local (opcional - para desenvolvimento local)
  supabase-local:
    image: supabase/postgres:15.1.0.117
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "54322:5432"
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - local-db

  # Supabase Studio (opcional - para desenvolvimento local)
  supabase-studio:
    image: supabase/studio:20231220-4b4b5b4
    ports:
      - "54323:3000"
    environment:
      SUPABASE_URL: http://supabase-local:5432
      SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
    depends_on:
      - supabase-local
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - local-db

  # Nginx reverse proxy (opcional - para produção)
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  supabase_db_data:
    driver: local

networks:
  app-network:
    driver: bridge
